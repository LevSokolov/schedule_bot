import asyncio
import os
import threading
import http.server
import socketserver
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from config import BOT_TOKEN
from handlers import router


# üîπ –§–µ–π–∫–æ–≤—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å Web Service)
def fake_server():
    port = int(os.environ.get("PORT", 8080))
    handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", port), handler) as httpd:
        print(f"üåê –§–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port} (–¥–ª—è Render)")
        httpd.serve_forever()


async def main():
    bot = Bot(token=BOT_TOKEN)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)
    dp.include_router(router)
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ñ–∞–π–ª–æ–≤—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º")
    await dp.start_polling(bot)


if __name__ == "__main__":
    # üîπ –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=fake_server, daemon=True).start()

    # üîπ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
    asyncio.run(main())
